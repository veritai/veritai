import type { Web3ModalEthereum } from '@web3modal/ethereum';
declare type EthApi = typeof Web3ModalEthereum;
declare type ResolvePromiseReturn<T> = T extends Promise<infer U> ? U : T;
export declare type AccountCtrlWatchCallback = Parameters<EthApi['watchAccount']>[0];
export declare type AccountCtrlGetReturnValue = ReturnType<EthApi['getAccount']>;
export declare type BalanceCtrlFetchArgs = Parameters<EthApi['fetchBalance']>[0];
export declare type BalanceCtrlFetchReturnValue = ResolvePromiseReturn<ReturnType<EthApi['fetchBalance']>>;
export declare type BlockCtrlWatchOptions = Omit<Parameters<EthApi['watchBlockNumber']>[0], 'listen'>;
export declare type BlockCtrlWatchCallback = Parameters<EthApi['watchBlockNumber']>[1];
export declare type NetworkCtrlWatchCallback = Parameters<EthApi['watchNetwork']>[0];
export declare type NetworkCtrlGetReturnValue = ReturnType<EthApi['getNetwork']>;
export declare type NetworkCtrlSwitchNetworkArgs = Parameters<EthApi['switchNetwork']>[0];
export declare type ProviderCtrlWatchOptions = Parameters<EthApi['watchProvider']>[0];
export declare type ProviderCtrlWatchCallback = Parameters<EthApi['watchProvider']>[1];
export declare type WebSocketProviderCtrlWatchOptions = Parameters<EthApi['watchWebSocketProvider']>[0];
export declare type WebSocketProviderCtrlWatchCallback = Parameters<EthApi['watchWebSocketProvider']>[1];
export declare type SignerCtrlWatchCallback = Parameters<EthApi['watchSigner']>[0];
export declare type SignerCtrlSignMessageArgs = Parameters<EthApi['signMessage']>[0];
export declare type SignerCtrlSignTypedDataArgs = Parameters<EthApi['signTypedData']>[0];
export declare type FeeCtrlFetchArgs = Parameters<EthApi['fetchFeeData']>[0];
export declare type FeeCtrlFetchReturnValue = ResolvePromiseReturn<ReturnType<EthApi['fetchFeeData']>>;
export declare type EnsCtrlFetchEnsAddressArgs = Parameters<EthApi['fetchEnsAddress']>[0];
export declare type EnsCtrlFetchEnsAvatarArgs = Parameters<EthApi['fetchEnsAvatar']>[0];
export declare type EnsCtrlFetchEnsNameArgs = Parameters<EthApi['fetchEnsName']>[0];
export declare type EnsCtrlFetchEnsResolverArgs = Parameters<EthApi['fetchEnsResolver']>[0];
export declare type TokenCtrlFetchArgs = Parameters<EthApi['fetchToken']>[0];
export declare type TransactionCtrlFetchArgs = Parameters<EthApi['fetchTransaction']>[0];
export declare type TransactionCtrlSendArgs = Parameters<EthApi['prepareSendTransaction']>[0];
export declare type TransactionCtrlWaitArgs = Parameters<EthApi['waitForTransaction']>[0];
export declare type ContractCtrlGetArgs = Parameters<EthApi['getContract']>[0];
export declare type ContractCtrlReadArgs = Parameters<EthApi['readContract']>[0];
export declare type ContractCtrlWatchReadArgs = Parameters<EthApi['watchReadContract']>;
export declare type ContractCtrlWriteArgs = Parameters<EthApi['prepareWriteContract']>[0];
export declare type ContractCtrlWatchEventArgs = Parameters<EthApi['watchContractEvent']>;
export {};
