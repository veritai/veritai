{"version":3,"file":"index.js","sources":["../src/controllers/statefull/ClientCtrl.ts","../src/controllers/statefull/ConfigCtrl.ts","../src/controllers/statefull/ConnectModalCtrl.ts","../src/utils/ExplorerApi.ts","../src/controllers/statefull/ExplorerCtrl.ts","../src/controllers/statefull/ModalToastCtrl.ts","../src/controllers/statefull/RouterCtrl.ts","../src/controllers/stateless/AccountCtrl.ts","../src/controllers/stateless/BalanceCtrl.ts","../src/controllers/stateless/BlockCtrl.ts","../src/controllers/stateless/ContractCtrl.ts","../src/controllers/stateless/EnsCtrl.ts","../src/controllers/stateless/FeeCtrl.ts","../src/controllers/stateless/NetworkCtrl.ts","../src/controllers/stateless/ProviderCtrl.ts","../src/controllers/stateless/SignerCtrl.ts","../src/controllers/stateless/TokenCtrl.ts","../src/controllers/stateless/TransactionCtrl.ts","../src/controllers/stateless/WebSocketProviderCtrl.ts","../src/utils/CoreConstants.ts","../src/utils/CoreHelpers.ts"],"sourcesContent":["import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type {\n  ClientCtrlSetEthereumClientArgs,\n  ClientCtrlState\n} from '../../../types/statefullCtrlTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ClientCtrlState>({\n  initialized: false,\n  ethereum: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ClientCtrl = {\n  state,\n\n  subscribe(callback: (newState: ClientCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  ethereum() {\n    if (!state.ethereum) throw new Error('Ethereum client was not provided')\n\n    return state.ethereum\n  },\n\n  async setEthereumClient(args: ClientCtrlSetEthereumClientArgs) {\n    const { Web3ModalEthereum } = await import('@web3modal/ethereum')\n    state.ethereum = Web3ModalEthereum.createClient(args)\n    state.initialized = true\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState, ConfigOptions } from '../../../types/statefullCtrlTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ConfigCtrlState>({\n  configured: false,\n  projectId: '',\n  theme: isDarkMode() ? 'dark' : 'light',\n  accentColor: 'default'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigOptions) {\n    if (!config.projectId)\n      throw new Error(\n        'Web3Modal requires projectId that can be obtained at cloud.walletconnect.com'\n      )\n    Object.assign(state, config)\n    state.configured = true\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConnectModalCtrlState } from '../../../types/statefullCtrlTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ConnectModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConnectModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConnectModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openModal() {\n    state.open = true\n  },\n\n  closeModal() {\n    state.open = false\n  }\n}\n","import type { ListingResponse, PageParams } from '../../types/statefullCtrlTypes'\nimport { ConfigCtrl } from '../controllers/statefull/ConfigCtrl'\n\n// -- helpers ------------------------------------------------------ //\nexport function getExplorerApi() {\n  return {\n    url: 'https://explorer-api.walletconnect.com',\n    projectId: ConfigCtrl.state.projectId\n  }\n}\n\nfunction formatParams(params: PageParams) {\n  const stringParams = Object.fromEntries(\n    Object.entries(params)\n      .filter(([_, value]) => typeof value !== 'undefined' && value !== null && value !== '')\n      .map(([key, value]) => [key, value.toString()])\n  )\n\n  return new URLSearchParams(stringParams).toString()\n}\n\nfunction formatUrl(params: PageParams) {\n  const { url, projectId } = getExplorerApi()\n\n  return `${url}/v3/wallets?projectId=${projectId}&${formatParams(params)}`\n}\n\n// -- utilities ---------------------------------------------------- //\nexport async function fetchWallets(params: PageParams): Promise<ListingResponse> {\n  const fetched = await fetch(formatUrl(params))\n\n  return fetched.json()\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, PageParams } from '../../../types/statefullCtrlTypes'\nimport { fetchWallets } from '../../utils/ExplorerApi'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  previewWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  subscribe(callback: (newState: ExplorerCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async getPreviewWallets() {\n    const { listings } = await fetchWallets({ page: 1, entries: 10, version: 1 })\n    state.previewWallets = Object.values(listings)\n\n    return state.previewWallets\n  },\n\n  async getPaginatedWallets(params: PageParams) {\n    const { page, search } = params\n    const { listings: listingsObj, total } = await fetchWallets(params)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalToastCtrlState } from '../../../types/statefullCtrlTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ModalToastCtrlState['message'], variant: ModalToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../../../types/statefullCtrlTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet'\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history.push(view)\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  }\n}\n","import type { AccountCtrlWatchCallback } from '../../../types/statelessCtrlTypes'\nimport { ClientCtrl } from '../statefull/ClientCtrl'\n\nexport const AccountCtrl = {\n  watch(_options: undefined, callback: AccountCtrlWatchCallback) {\n    const unwatch = ClientCtrl.ethereum().watchAccount(callback)\n\n    return unwatch\n  },\n\n  get() {\n    const data = ClientCtrl.ethereum().getAccount()\n\n    return data\n  },\n\n  disconnect() {\n    ClientCtrl.ethereum().disconnect()\n  }\n}\n","import type {\n  BalanceCtrlFetchArgs,\n  BalanceCtrlFetchReturnValue\n} from '../../../types/statelessCtrlTypes'\nimport { ClientCtrl } from '../statefull/ClientCtrl'\n\nexport const BalanceCtrl = {\n  watch(args: BalanceCtrlFetchArgs, callback: (data: BalanceCtrlFetchReturnValue) => void) {\n    const unwatch = ClientCtrl.ethereum().watchBlockNumber({ ...args, listen: true }, async () => {\n      const data = await BalanceCtrl.fetch(args)\n      callback(data)\n    })\n\n    return unwatch\n  },\n\n  async fetch(args: BalanceCtrlFetchArgs) {\n    const data = await ClientCtrl.ethereum().fetchBalance(args)\n\n    return data\n  }\n}\n","import type {\n  BlockCtrlWatchCallback,\n  BlockCtrlWatchOptions\n} from '../../../types/statelessCtrlTypes'\nimport { ClientCtrl } from '../statefull/ClientCtrl'\n\nexport const BlockCtrl = {\n  watch(options: BlockCtrlWatchOptions, callback: BlockCtrlWatchCallback) {\n    const unwatch = ClientCtrl.ethereum().watchBlockNumber({ ...options, listen: true }, callback)\n\n    return unwatch\n  },\n\n  async fetch(options: BlockCtrlWatchOptions) {\n    const data = await ClientCtrl.ethereum().fetchBlockNumber(options)\n\n    return data\n  }\n}\n","import type {\n  ContractCtrlGetArgs,\n  ContractCtrlReadArgs,\n  ContractCtrlWatchEventArgs,\n  ContractCtrlWatchReadArgs,\n  ContractCtrlWriteArgs\n} from '../../../types/statelessCtrlTypes'\nimport { ClientCtrl } from '../statefull/ClientCtrl'\n\nexport const ContractCtrl = {\n  get(args: ContractCtrlGetArgs) {\n    const data = ClientCtrl.ethereum().getContract(args)\n\n    return data\n  },\n\n  async read(args: ContractCtrlReadArgs) {\n    const data = await ClientCtrl.ethereum().readContract(args)\n\n    return data\n  },\n\n  async write(args: ContractCtrlWriteArgs) {\n    const config = await ClientCtrl.ethereum().prepareWriteContract(args)\n    const data = await ClientCtrl.ethereum().writeContract(config)\n\n    return data\n  },\n\n  watchRead(options: ContractCtrlWatchReadArgs[0], callback: ContractCtrlWatchReadArgs[1]) {\n    const unwatch = ClientCtrl.ethereum().watchReadContract(\n      { ...options, listenToBlock: true },\n      callback\n    )\n\n    return unwatch\n  },\n\n  watchEven(\n    contract: ContractCtrlWatchEventArgs[0],\n    eventName: ContractCtrlWatchEventArgs[1],\n    callback: ContractCtrlWatchEventArgs[2],\n    options: ContractCtrlWatchEventArgs[3]\n  ) {\n    const unwatch = ClientCtrl.ethereum().watchContractEvent(contract, eventName, callback, options)\n\n    return unwatch\n  }\n}\n","import type {\n  EnsCtrlFetchEnsAddressArgs,\n  EnsCtrlFetchEnsAvatarArgs,\n  EnsCtrlFetchEnsNameArgs,\n  EnsCtrlFetchEnsResolverArgs\n} from '../../../types/statelessCtrlTypes'\nimport { ClientCtrl } from '../statefull/ClientCtrl'\n\nexport const EnsCtrl = {\n  async fetchEnsAddress(args: EnsCtrlFetchEnsAddressArgs) {\n    const data = await ClientCtrl.ethereum().fetchEnsAddress(args)\n\n    return data\n  },\n\n  async fetchEnsAvatar(args: EnsCtrlFetchEnsAvatarArgs) {\n    const data = await ClientCtrl.ethereum().fetchEnsAvatar(args)\n\n    return data\n  },\n\n  async fetchEnsName(args: EnsCtrlFetchEnsNameArgs) {\n    const data = await ClientCtrl.ethereum().fetchEnsName(args)\n\n    return data\n  },\n\n  async fetchEnsResolver(args: EnsCtrlFetchEnsResolverArgs) {\n    const data = await ClientCtrl.ethereum().fetchEnsResolver(args)\n\n    return data\n  }\n}\n","import type { FeeCtrlFetchArgs, FeeCtrlFetchReturnValue } from '../../../types/statelessCtrlTypes'\nimport { ClientCtrl } from '../statefull/ClientCtrl'\n\nexport const FeeCtrl = {\n  watch(args: FeeCtrlFetchArgs, callback: (data: FeeCtrlFetchReturnValue) => void) {\n    const unwatch = ClientCtrl.ethereum().watchBlockNumber({ ...args, listen: true }, async () => {\n      const data = await FeeCtrl.fetch(args)\n      callback(data)\n    })\n\n    return unwatch\n  },\n\n  async fetch(args: FeeCtrlFetchArgs) {\n    const data = await ClientCtrl.ethereum().fetchFeeData(args)\n\n    return data\n  }\n}\n","import type {\n  NetworkCtrlSwitchNetworkArgs,\n  NetworkCtrlWatchCallback\n} from '../../../types/statelessCtrlTypes'\nimport { ClientCtrl } from '../statefull/ClientCtrl'\n\nexport const NetworkCtrl = {\n  watch(_options: undefined, callback: NetworkCtrlWatchCallback) {\n    const unwatch = ClientCtrl.ethereum().watchNetwork(callback)\n\n    return unwatch\n  },\n\n  get() {\n    const data = ClientCtrl.ethereum().getNetwork()\n\n    return data\n  },\n\n  async switchNetwork(args: NetworkCtrlSwitchNetworkArgs) {\n    const data = await ClientCtrl.ethereum().switchNetwork(args)\n\n    return data\n  }\n}\n","import type {\n  ProviderCtrlWatchCallback,\n  ProviderCtrlWatchOptions\n} from '../../../types/statelessCtrlTypes'\nimport { ClientCtrl } from '../statefull/ClientCtrl'\n\nexport const ProviderCtrl = {\n  watch(options: ProviderCtrlWatchOptions, callback: ProviderCtrlWatchCallback) {\n    const unwatch = ClientCtrl.ethereum().watchProvider(options, callback)\n\n    return unwatch\n  },\n\n  get(options: ProviderCtrlWatchOptions) {\n    const data = ClientCtrl.ethereum().getProvider(options)\n\n    return data\n  }\n}\n","import type {\n  SignerCtrlSignMessageArgs,\n  SignerCtrlSignTypedDataArgs,\n  SignerCtrlWatchCallback\n} from '../../../types/statelessCtrlTypes'\nimport { ClientCtrl } from '../statefull/ClientCtrl'\n\nexport const SignerCtrl = {\n  watch(_options: undefined, callback: SignerCtrlWatchCallback) {\n    const unwatch = ClientCtrl.ethereum().watchSigner(callback)\n\n    return unwatch\n  },\n\n  async fetch() {\n    const data = await ClientCtrl.ethereum().fetchSigner()\n\n    return data\n  },\n\n  async signMessage(args: SignerCtrlSignMessageArgs) {\n    const data = await ClientCtrl.ethereum().signMessage(args)\n\n    return data\n  },\n\n  async signTypedData(args: SignerCtrlSignTypedDataArgs) {\n    const data = await ClientCtrl.ethereum().signTypedData(args)\n\n    return data\n  }\n}\n","import type { TokenCtrlFetchArgs } from '../../../types/statelessCtrlTypes'\nimport { ClientCtrl } from '../statefull/ClientCtrl'\n\nexport const TokenCtrl = {\n  async fetch(args: TokenCtrlFetchArgs) {\n    const data = await ClientCtrl.ethereum().fetchToken(args)\n\n    return data\n  }\n}\n","import type {\n  TransactionCtrlFetchArgs,\n  TransactionCtrlSendArgs,\n  TransactionCtrlWaitArgs\n} from '../../../types/statelessCtrlTypes'\nimport { ClientCtrl } from '../statefull/ClientCtrl'\n\nexport const TransactionCtrl = {\n  async fetch(args: TransactionCtrlFetchArgs) {\n    const data = await ClientCtrl.ethereum().fetchTransaction(args)\n\n    return data\n  },\n\n  async send(args: TransactionCtrlSendArgs) {\n    const config = await ClientCtrl.ethereum().prepareSendTransaction(args)\n    const data = await ClientCtrl.ethereum().sendTransaction(config)\n\n    return data\n  },\n\n  async wait(args: TransactionCtrlWaitArgs) {\n    const data = await ClientCtrl.ethereum().waitForTransaction(args)\n\n    return data\n  }\n}\n","import type {\n  WebSocketProviderCtrlWatchCallback,\n  WebSocketProviderCtrlWatchOptions\n} from '../../../types/statelessCtrlTypes'\nimport { ClientCtrl } from '../statefull/ClientCtrl'\n\nexport const WebSocketProviderCtrl = {\n  watch(options: WebSocketProviderCtrlWatchOptions, callback: WebSocketProviderCtrlWatchCallback) {\n    const unwatch = ClientCtrl.ethereum().watchWebSocketProvider(options, callback)\n\n    return unwatch\n  },\n\n  get(options: WebSocketProviderCtrlWatchOptions) {\n    const data = ClientCtrl.ethereum().getWebSocketProvider(options)\n\n    return data\n  }\n}\n","export const WALLETCONNECT_DEEPLINK_CHOICE = 'WALLETCONNECT_DEEPLINK_CHOICE'\n","import { WALLETCONNECT_DEEPLINK_CHOICE } from './CoreConstants'\n\nexport const CoreHelpers = {\n  isCoinbaseExtension() {\n    return window.coinbaseWalletExtension\n  },\n\n  isMobile() {\n    return Boolean(\n      window.matchMedia('(pointer:coarse)').matches ||\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n    )\n  },\n\n  isEmptyObject(value: unknown) {\n    return (\n      Object.getPrototypeOf(value) === Object.prototype &&\n      Object.getOwnPropertyNames(value).length === 0 &&\n      Object.getOwnPropertySymbols(value).length === 0\n    )\n  },\n\n  formatNativeUrl(appUrl: string, encodedWcUrl: string, name: string) {\n    const plainAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n    this.setWalletConnectDeepLink(plainAppUrl, name)\n\n    return `${plainAppUrl}://wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, encodedWcUrl: string, name: string) {\n    let plainAppUrl = appUrl\n    if (appUrl.endsWith('/')) plainAppUrl = appUrl.slice(0, -1)\n    this.setWalletConnectDeepLink(plainAppUrl, name)\n\n    return `${plainAppUrl}/wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target = '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    localStorage.setItem(WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n  },\n\n  removeWalletConnectDeepLink() {\n    localStorage.removeItem(WALLETCONNECT_DEEPLINK_CHOICE)\n  }\n}\n"],"names":["state","proxy","ClientCtrl","callback","valtioSub","args","Web3ModalEthereum","isDarkMode","ConfigCtrl","config","ConnectModalCtrl","getExplorerApi","formatParams","params","stringParams","_","value","key","formatUrl","url","projectId","fetchWallets","ExplorerCtrl","listings","page","search","listingsObj","total","type","ModalToastCtrl","message","variant","RouterCtrl","view","last","AccountCtrl","_options","BalanceCtrl","__spreadProps","__spreadValues","data","n","s","C","r","k","p","a","c","l","e","o","BlockCtrl","options","h","g","u","d","ContractCtrl","contract","eventName","EnsCtrl","FeeCtrl","NetworkCtrl","ProviderCtrl","SignerCtrl","TokenCtrl","TransactionCtrl","WebSocketProviderCtrl","WALLETCONNECT_DEEPLINK_CHOICE","CoreHelpers","appUrl","encodedWcUrl","name","plainAppUrl","miliseconds","resolve","href","target"],"mappings":"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"}